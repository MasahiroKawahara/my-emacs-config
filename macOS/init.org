* 【セットアップ方法】
** Emacsをインストール
#+begin_src bash
brew install --cask emacs
#+end_src
** 事前準備
*** yasnippet-snippets
#+begin_src bash
cd ~/.emacs.d
git clone https://github.com/AndreaCrotti/yasnippet-snippets
#+end_src
** init.el および init.org を作成する
- 「 [[~/.emacs.d/init.el]] 」を作成。以下内容を追加
    #+begin_example
(require 'org-install)
(defvar org-dir "~/org/")
(org-babel-load-file (expand-file-name "init.org" org-dir))
    #+end_example
- このファイル( ~/org/init.org )を編集する
** COMMENT 1. 各種パッケージインストール
- 「 [[~/.emacs.d/init.el]] 」を作成。以下内容を追加
  #+begin_example
(require 'package)

;; package-archives を上書き
(setq package-archives
      '(("melpa" . "http://melpa.org/packages/")
        ;; ("melpa-stable" . "https://stable.melpa.org/packages/")
        ("org" . "http://orgmode.org/elpa/")
        ("gnu" . "http://elpa.gnu.org/packages/")))
  #+end_example
- Emacs 再起動。パッケージをインストールしていく
*** exec-path-from-shell
#+begin_example
M-x package-install exec-path-from-shell
#+end_example
*** zenburn-theme for Emacs
#+begin_example
M-x package-install zenburn-theme
#+end_example
*** persistent-scratch
#+begin_example
M-x package-install persistent-scratch
#+end_example
*** org-bullets
[[https://github.com/sabof/org-bullets][GitHub - sabof/org-bullets: utf-8 bullets for org-mode]]
#+begin_example
M-x package-install org-bullets
#+end_example
*** org-tree-slide
[[https://qiita.com/takaxp/items/8dfb5d34dfcd79f9fa5c][org-modeのツリーでスライドショー - Qiita]]
#+begin_example
M-x package-install org-tree-slide
#+end_example
*** yasnippet
#+begin_example
M-x package-install yasnippet
M-x package-install yasnippet-snippets
#+end_example
*** counsel
[[https://qiita.com/tadsan/items/33ebb8db2271897a462b][君は誰とEmacsる？ (補完インターフェイス紹介篇) - Qiita]]
#+begin_example
M-x package-install counsel
#+end_example
*** company
[[https://qiita.com/blue0513/items/c0dc35a880170997c3f5][Emacsの補完と検索を超強化する - Qiita]]
#+begin_example
M-x package-install company
#+end_example
*** markdown-mode
#+begin_example
M-x package-install markdown-mode
#+end_example
*** terraform-mode
#+begin_example
M-x package-install terraform-mode
#+end_example
*** yaml-mode
#+begin_example
M-x package-install yaml-mode
#+end_example
** COMMENT 2. 設定ファイル作成
- 「 [[~/.emacs.d/init.el]] 」を作成。以下内容を追加
    #+begin_example
(require 'org-install)
(defvar org-dir "~/org/")
(org-babel-load-file (expand-file-name "init.org" org-dir))
    #+end_example
- このファイル( ~/org/init.org )を編集する
** COMMENT 参考
- [[http://blog.lambda-consulting.jp/2015/11/20/article/][俺、ちゃんと全部管理してます（org-modeでinit.elを管理する） | lambda consulting]]
- [[https://emacs-jp.github.io/tips/emacs-in-2020][2020年代のEmacs入門 | Emacs JP]]
* 基本設定
** 必要なパッケージをインストールする
[[https://emacs-jp.github.io/packages/package][package: パッケージ管理ツール | Emacs JP]]
#+begin_src emacs-lisp
(require 'package)
(setq package-archives
      '(("melpa" . "https://melpa.org/packages/")
        ("org" . "https://orgmode.org/elpa/")
        ("gnu" . "https://elpa.gnu.org/packages/")))
(package-initialize)

;;;; インストールするパッケージ
(defvar my/favorite-packages
  '(
    ;;;; shell
    exec-path-from-shell

    ;;;; theme
    zenburn-theme

    ;;;; git
    magit

    ;;;; counsel (+ ivy, swiper)
    counsel

    ;;;; company, yasnippet
    company yasnippet

    ;;;; languages
    markdown-mode terraform-mode yaml-mode
    ))

;;;; my/favorite-packagesからインストールしていないパッケージをインストール
; my-setup-package-install: インストールされていないものがある場合は t
(setq my-setup-package-install nil)
(dolist (package my/favorite-packages)
 (unless (package-installed-p package)
    (setq my-setup-package-install t)))

; my-setup-package-install が t の場合は package-refresh-contents
(if my-setup-package-install
  (package-refresh-contents))

; インストールされていないパッケージをインストール
(dolist (package my/favorite-packages)
    (unless (package-installed-p package)
      (package-install package)))
#+end_src

*** COMMENT old
#+begin_src emacs-lisp
(require 'package)
(setq package-install-upgrade-built-in t)
;; package-archivesを上書き
(setq package-archives
      '(("melpa" . "http://melpa.org/packages/")
        ;; ("melpa-stable" . "https://stable.melpa.org/packages/")
        ("org" . "http://orgmode.org/elpa/")
        ("gnu" . "http://elpa.gnu.org/packages/")))

;; 初期化
(package-initialize)
#+end_src
** シェル環境変数を設定する
[[https://github.com/purcell/exec-path-from-shell][GitHub - purcell/exec-path-from-shell: Make Emacs use the $PATH set up by the user&#39;s shell]]
#+BEGIN_SRC emacs-lisp
(when (memq window-system '(mac ns x))
  (exec-path-from-shell-initialize))
#+END_SRC
** 自動保存バックアップの場所を指定する
#+BEGIN_SRC emacs-lisp
;; 自動保存されるバックアップファイルの置き場所を ~/.emacs.d/backup に変更する
(setq backup-directory-alist
  (cons (cons ".*" (expand-file-name "~/.emacs.d/backup"))
        backup-directory-alist))
(setq auto-save-file-name-transforms
      `((".*" ,(expand-file-name "~/.emacs.d/backup/") t)))
#+END_SRC
** カスタムファイルを指定する
- [[https://ayatakesi.github.io/emacs/24.5/Saving-Customizations.html][GNU Emacs Manual(Japanese Translation): Saving Customizations]]
#+begin_src emacs-lisp
;; カスタムファイルの指定
(setq custom-file "~/.emacs.d/custom.el")
#+end_src
